name: PyInstaller

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Install UPX
        uses: crazy-max/ghaction-upx@v3.0.0
        if: matrix.os == 'windows-latest' || matrix.os == 'ubuntu-latest'
        with:
          install-only: true

      - name: UPX version
        if: matrix.os == 'windows-latest' || matrix.os == 'ubuntu-latest'
        run: upx --version

      - name: Setup Python 3.10
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller for macos/ubuntu
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller \
            --onefile media_downloader.py \
            --python-option u \
            --add-data "config.yaml:." \

      - name: Build with PyInstaller for windows
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller `
            --onefile media_downloader.py `
            --python-option u `
            --add-data "config.yaml;." `

      - name: Copy config.yaml
        run: |
          cp config.yaml dist/
          cp downloaded.db dist/
          cp data.yaml dist/

      - name: Set VERSION variable for macos/ubuntu
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        run: |
          echo "VERSION=$(python media_downloader.py --version)" >> $GITHUB_ENV

      - name: Set VERSION variable for windows
        if: matrix.os == 'windows-latest'
        run: |
          echo "VERSION=$(python media_downloader.py --version)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload build artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: TMD-${{ env.VERSION }}-${{ runner.os }}-amd64
          path: dist

      - name: Run test (Ubuntu & MacOS)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          cd dist
          ./media_downloader
